apiVersion: v1
kind: Secret
metadata:
  name: security-secrets
  namespace: default
type: Opaque
data:
  # JWT Secret for user authentication (production-ready, base64 encoded)
  # Generated with: openssl rand -base64 64
  APP_JWT_SECRET: NEZFMUVvSjQ0cG1ua3ZweUVmZkg4VFZSVk1sVnJVYXZWeTcyNUpWMG5IMlF4Z2E1R0NSb24wWnBiZjV4QlNuRTdFMHA4Njl5ZHpXVVJyTk5WSHMzcnc9PQ==
  JWT_SECRET: NEZFMUVvSjQ0cG1ua3ZweUVmZkg4VFZSVk1sVnJVYXZWeTcyNUpWMG5IMlF4Z2E1R0NSb24wWnBiZjV4QlNuRTdFMHA4Njl5ZHpXVVJyTk5WSHMzcnc9PQ==
  
  # Internal service communication secret (production-ready, base64 encoded)
  # Generated with: openssl rand -base64 64  
  INTERNAL_SERVICE_SECRET: L0RIc3JlSEpiRUZUdVE3WHAxWGNrUmtzd2hMV0MxdXQ5T2VvYkphaHg4TkZKdEQ1T041UlRteTB2MFZKY2J5SzVjSk5nWklCR1ZMaGorTmZKWjhjZWc9PQ==
  
  # Dynamic API Key for blockchain integration (base64 encoded)
  # To encode: echo -n "dyn_waH52bqtjueEcRLrHLcSfvCVhm2jZxSyv2MCl24XumHJt8ZOg119sLcl" | base64
  DYNAMIC_API_KEY: ZHluX3dhSDUyYnF0anVlRWNSTHJITGNTZnZDVmhtMmpaeVN5djJNQ2wyNFh1bUhKdDhMT2cxMTlzTGNs

---
# Instructions for updating with real values:
# 1. Generate strong secrets for production environment
# 2. Base64 encode each secret: echo -n "your-secret" | base64
# 3. Replace the placeholder values above
# 4. Apply to cluster: kubectl apply -f security-secrets.yaml
